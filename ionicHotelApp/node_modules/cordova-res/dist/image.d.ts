/// <reference types="node" />
import { Metadata, Sharp } from 'sharp';
import { Platform } from './platform';
import { Format, ResolvedImageSource, ResourceType } from './resources';
/**
 * Check an array of source files, returning the first viable image.
 */
export declare function resolveSourceImage(platform: Platform, type: ResourceType, sources: string[], errstream?: NodeJS.WritableStream): Promise<ResolvedImageSource>;
export declare function readSourceImage(platform: Platform, type: ResourceType, src: string, errstream?: NodeJS.WritableStream): Promise<ResolvedImageSource>;
export declare function debugSourceImage(src: string, error: NodeJS.ErrnoException, errstream?: NodeJS.WritableStream): void;
export interface ImageSchema {
    src: string;
    format: Format;
    width: number;
    height: number;
}
export declare function generateImage(image: ImageSchema, src: Sharp, metadata: Metadata, errstream?: NodeJS.WritableStream): Promise<void>;
export declare function transformImage(image: ImageSchema, src: Sharp): Sharp;
export declare function applyFormatConversion(format: Format, src: Sharp): Sharp;
